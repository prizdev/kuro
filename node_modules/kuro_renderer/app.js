var path = require('path');
var pg = require('pg');
var os = require('os');
var conString = "postgres://ubuntu:KuroB192@localhost/kuro_db";

var blender_renderer = function() {
	pg.connect(conString, function(err, client, done) {
		client.query('SELECT * FROM jobs ORDER BY taskname ASC LIMIT(1)', function(err, results) {
			console.log(results.rows);
			client.query("UPDATE tasks SET status = 'rendering' WHERE name = $1", [results.rows[0].taskname], function(err) {
				client.query('SELECT * FROM tasks WHERE name = $1', [results.rows[0].taskname], function(err, results) {
					var row = results.rows[0];
					var exec = require('child_process').exec;
					var cmd;
					if(os.platform === 'win32') {
						cmd = '"C:\\Program Files\\Blender Foundation\\Blender\\blender.exe" -b -P ' + path.join(__dirname, 'main.py') + ' -t ' + row.name + ' ' + ' -nogl ' + row.nogl + ' -gif ' + row.gif;
					}
					else {
						cmd = 'blender -b -P ' + path.join(process.cwd(), 'routes/api/v1/main.py') + ' -t ' + row.name + ' ' + '-nogl ' + row.nogl + ' -gif ' + row.gif;
					}
					console.log(cmd);
					exec(cmd, function(error, stdout, stderr) {
						console.log('error:', error);
						console.log('stdout:', stdout);
						console.log('stderr:', stderr);
						client.query('DELETE FROM jobs WHERE taskname = $1', [row.name], function(err, results) {
							if(err) console.log(err);
							client.query("UPDATE tasks SET status = 'complete'", function(err, results) {
								if(err) console.log(err);
								client.query('SELECT count(*) FROM jobs' , function(err, count_results) {
			                        done();
			                        if(err) console.log(err);
			                        console.log(count_results.rows[0].count);
			                        if(parseInt(count_results.rows[0].count) > 0) {
			                            blender_renderer();
			                        }
			                    });
							});
						});
					});
				});
			});
		});
	});
	/*var taskname = '123456';
	var uname = 'derp';
	var password = 'derpderp';
	var start = new Date().getTime();
	mkdirp('./assets/'+taskname+'/input', function(err) {
		if(err) res.send('task creation failed: directory creation failed');
		else mkdirp('./assets/'+taskname+'/output', function(err) {
			if(err) res.send('task creation failed: directory creation failed');
			else mkdirp('./assets/'+taskname+'/render', function(err) {
				if(err) res.send('task creation failed: directory creation failed');
				else {
					var exec = require('child_process').exec;
					var cmd;
					if(os.platform === 'win32') {
						cmd = '"C:\\Program Files\\Blender Foundation\\Blender\\blender.exe" -b -P ' + path.join(__dirname, 'main.py') + ' -t ' + taskname + ' ' + ' -nogl ' + req.body.nogl + ' -gif ' + req.body.gif;
					}
					else {
						cmd = 'blender -b -P ' + path.join(__dirname, 'main.py') + ' -t ' + taskname + ' ' + '-nogl ' + req.body.nogl + ' -gif ' + req.body.gif;
					}
					console.log(cmd);
					exec(cmd, function(error, stdout, stderr) {
						//console.log('error:', error);
						console.log('stdout:', stdout);
						//console.log('stderr:', stderr);
						console.log(taskname, uname, password);
						console.log(new Date().getTime() - start);
					});
					res.send({
						success: true,
						message: 'Render added to queue'
					});
				}
			});
		});
	});*/
};

module.exports = (function(){
	return blender_renderer;
}(this));
